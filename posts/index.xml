<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on tdl-jturner</title>
    <link>http://thedigitallink.net/posts/</link>
    <description>Recent content in Posts on tdl-jturner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 30 Aug 2019 07:49:44 -0700</lastBuildDate>
    
	<atom:link href="http://thedigitallink.net/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Self-Signed SSL</title>
      <link>http://thedigitallink.net/posts/self-signing/</link>
      <pubDate>Fri, 30 Aug 2019 07:49:44 -0700</pubDate>
      
      <guid>http://thedigitallink.net/posts/self-signing/</guid>
      <description>I&amp;rsquo;ve been working with two-way SSL in Kafka recently and could not find a concise place with the steps of creating your own CA and issuing certificates for the nodes. The same process would apply to SSL for many distributed systems including Cassandra and others. Here&amp;rsquo;s a post with a little background and some scripts to assist.
What is SSL? SSL is great as a minimal level of security in any web-based product and something you should always use when available.</description>
    </item>
    
    <item>
      <title>Designing Flutter</title>
      <link>http://thedigitallink.net/posts/flutter-design/</link>
      <pubDate>Mon, 26 Aug 2019 14:19:54 -0700</pubDate>
      
      <guid>http://thedigitallink.net/posts/flutter-design/</guid>
      <description>I&amp;rsquo;ve been thinking of a method to experiment with new technologies in a practical way beyond just Hello World. The goal would be to make a system that is complex enough to be valid but still simple enough to rapidly deploy in new languages and technologies. In addition, it would be broken in to microservices such that any individual method could be quickly swapped out and play well together. This way if I wanted to explore a new language or technology then I could simply rewrite a single API and see what happens.</description>
    </item>
    
    <item>
      <title>Hugo and GitHub Website</title>
      <link>http://thedigitallink.net/posts/github-hugo-website/</link>
      <pubDate>Sun, 25 Aug 2019 16:44:58 -0700</pubDate>
      
      <guid>http://thedigitallink.net/posts/github-hugo-website/</guid>
      <description>GitHub offers GitHub Pages for repositories, users, and organizations. I used this recently in conjunction with Casquatch to host a new Hugo based manual. Today, I decided to use the same technology to setup a personal profile page and what better way to start off the blog than discussing the creation of that blog.
Prerequisites The following technologies will be used
 Git - Client for source code repo GitHub - Source Code Repository Hugo - Static Website Framework Coder Theme - Theme for Hugo but this could easily be anything  Before starting, please make sure Git and Hugo are installed and functioning.</description>
    </item>
    
    <item>
      <title>Announcing Casquatch 2.0</title>
      <link>http://thedigitallink.net/posts/casquatch20/</link>
      <pubDate>Wed, 21 Aug 2019 15:54:38 -0700</pubDate>
      
      <guid>http://thedigitallink.net/posts/casquatch20/</guid>
      <description>I&amp;rsquo;m very excited to announce the 2.0 release of Casquatch! With it comes a full rewrite to align with the 4.x DataStax OSS Driver, new manual (https://tmobile.github.io/casquatch), annotations, spring integration, failover policy, and even more streamlined code.
Get yourself a cup of coffee and run through the tutorial (https://tmobile.github.io/casquatch/examples/springrest/). You&amp;rsquo;ll be up and running with a full Spring Rest DAO in just a few minutes.</description>
    </item>
    
    <item>
      <title>Introducing Project Casquatch</title>
      <link>http://thedigitallink.net/posts/casquatch-open-source/</link>
      <pubDate>Wed, 25 Jul 2018 16:04:24 -0700</pubDate>
      
      <guid>http://thedigitallink.net/posts/casquatch-open-source/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>